groups:
- name: build
  jobs:
  - testflight
  - rc
  - shipit

- name: version
  jobs:
  - patch
  - minor
  - major

- name: ci_image
  jobs:
  - build-task-image


jobs:
- name: testflight
  public: true
  serial: true
  plan:
  - do:
    - aggregate:
      - get: influxenterprise-boshrelease
        resource: git-influxenterprise-boshrelease
      - get: git-influxenterprise-boshrelease-release-changes
        trigger: true

    - task: create-release-and-deploy
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((docker.image))
        inputs:
        - {name: influxenterprise-boshrelease}
        run:
          path: ./influxenterprise-boshrelease/ci/scripts/create_release_and_deploy.sh
          args: []
        params:
          bosh_target: ((bosh-lite-build.target))
          bosh_username: ((bosh-lite-build.username))
          bosh_password: ((bosh-lite-build.password))
          bosh_deployment_name: influxenterprise
          license_key: 
          shared_secret: ((influxenterprise-license.shared-secret))
          license_file: ((influxenterprise-license.license-file))

- name: rc
  public: true
  plan:
  - aggregate:
    - get: boshrelease
      resource: git-influxenterprise-boshrelease
      passed: [testflight]
      trigger: true
    - get: version
      trigger: false
      params: {bump: minor, pre: rc}
  - put: version
    params: {file: version/number}

- name: patch
  public: true
  plan:
  - aggregate:
    - get: version
      trigger: false
      params: {bump: patch}
  - put: version
    params: {file: version/number}

- name: minor
  public: true
  plan:
  - aggregate:
    - get: version
      trigger: false
      params: {bump: minor}
  - put: version
    params: {file: version/number}

- name: major
  public: true
  plan:
  - aggregate:
    - get: version
      trigger: false
      params: {bump: major}
  - put: version
    params: {file: version/number}

- name: shipit
  public: true
  serial: true
  plan:
  - aggregate:
    - get: version
      passed: [rc]
      params: {bump: final}
    - get: boshrelease
      resource: git-influxenterprise-boshrelease
      passed: [rc]
  - task: create-final-release
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: teamidefix/influxenterprise-boshrelease-pipeline
      inputs:
      - {name: boshrelease, path: influxenterprise-boshrelease}
      - {name: version}
      outputs:
      - {name: create-final-release, path: output}

      run:
        path: ./influxenterprise-boshrelease/ci/scripts/shipit.sh
        args: []
      params:
        release_name: "influxenterprise BOSH Release"
        bosh_target: ((bosh-lite-build.target))
        bosh_username: ((bosh-lite-build.username))
        bosh_password: ((bosh-lite-build.password))
        bosh_deployment_name: influxenterprise
        aws_access_key_id: ((user-aws-concourse.aws_access_key))
        aws_secret_access_key: ((user-aws-concourse.aws_secret_key))
        promotion_branch: master
        output_dir: ../output/influxenterprise-boshrelease
  - put: git-influxenterprise-boshrelease
    params:
      repository: create-final-release/influxenterprise-boshrelease
      rebase: true
  - aggregate:
    - put: version
      params: {file: version/number}
    - put: final-release
      params:
        from: create-final-release/influxenterprise-boshrelease/releases/influxenterprise/influxenterprise-(.*).tgz
        to: influxenterprise-boshrelease/
    - put: github-final-release
      params:
        name: create-final-release/influxenterprise-boshrelease/release/name
        tag: create-final-release/influxenterprise-boshrelease/release/tag
        body: create-final-release/influxenterprise-boshrelease/release/notes.md
        globs: [create-final-release/influxenterprise-boshrelease/releases/influxenterprise/influxenterprise-*.tgz]

- name: build-task-image
  public: true
  serial: true
  plan:
  - get: git-boshrelease
    trigger: true
  - put: docker-image
    params:
      build: git-boshrelease/ci/ci_image



resources:
- name: version
  type: semver
  source:
    key: current-version
    bucket: ((s3.pipeline-bucket))
    access_key_id: ((user-aws-concourse-idefixoperationsprod.aws_access_key))
    secret_access_key: ((user-aws-concourse-idefixoperationsprod.aws_secret_key))
    initial_version: 0.0.0

- name: git-influxenterprise-boshrelease
  type: git
  source:
    uri: ((git.uri))
    branch: ((git.branch))

- name: git-influxenterprise-boshrelease-release-changes
  type: git
  source:
    uri: ((git.uri))
    branch: ((git.branch))
    paths:
      - src/**/*
      - jobs/**/*
      - packages/**/*
      - config/blobs.yml
      - .final_builds/**/*
      - templates/**/*
      - .gitmodules

- name: github-final-release
  type: github-release
  source:
    user: hybris
    repository: influxenterprise-boshrelease
    access_token: ((github.accessToken))

- name: final-release
  type: s3
  source:
    bucket: ((s3-buckets.boshreleases))
    regexp: influxenterprise-boshrelease/influxenterprise-(.*).tgz
    access_key_id: ((user-aws-concourse.aws_access_key))
    secret_access_key: ((user-aws-concourse.aws_secret_key))

- name: git-boshrelease
  type: git
  source:
    uri: ((git.uri))
    branch: ((git.branch))
    paths: [ci/ci_image/*]

- name: docker-image
  type: docker-image
  source:
    email: ((docker-hub.email))
    username: ((docker-hub.username))
    password: ((docker-hub.password))
    repository: ((docker.image))
